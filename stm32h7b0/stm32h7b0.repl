

ltdc: Video.STM32LTDC_STM32H7 @ sysbus 0x50001000
    -> nvic@88

dma2d: DMA.STM32DMA2D @ sysbus 0x52001000
    -> nvic@90

dma2: DMA.STM32DMA @ sysbus 0x40020400
    [0-7] -> nvic@[56-60, 68-70]

dma1: DMA.STM32DMA @ sysbus 0x40020000
    [0-7] -> nvic@[11-17, 47]

bdma: DMA.STM32LDMA @ sysbus 0x58025400
    [0-7] -> exti@[66-73]

cpu: CPU.CortexM @ sysbus
    cpuType: "cortex-m7"
    numberOfMPURegions: 16
    nvic: nvic

nvic: IRQControllers.NVIC @ sysbus 0xE000E000
    systickFrequency: 280_000_000
    priorityMask: 0xF0
    -> cpu@0

syscfg: Miscellaneous.STM32_SYSCFG @ sysbus 0x58000400
    [0-15] -> exti@[0-15]


exti: IRQControllers.STM32H7_EXTI @ sysbus 0x58000000
    [0-4] -> nvic@[6-10]
    [5-9] -> nvicInput23@[0-4]
    [10-15] -> nvicInput40@[0-5]
    [16-19] -> nvic@[1, 41, 2, 3]
    [20, 21] -> nvicInput137@[0-1]
    [22-24] -> nvic@[31, 33, 72]
    [26-29] -> nvic@[37-39, 71]
    [30-33] -> nvic@[52, 53, 82, 83]
    [34-35] -> nvicInput142@[0-1]
    [36-40] -> nvic@[35, 36, 51, 84, 85]
    41 -> nvicInput86@0
    [42-44] -> nvic@[119, 76, 100]
    [47, 48, 50, 52, 53] -> nvic@[93, 138-141]
    54 -> nvic@115
    [55-60] -> nvicInput149@[0-5]
    [61-64] -> nvic@[5, 95, 96, 142]
    65 -> nvicInput86@1
    [66-73] -> nvic@[129-136]
    [74-76] -> nvic@[128, 127, 146]
    [85, 86] -> nvic@[94, 61]


nvicInputADC: Miscellaneous.CombinedInput @ none
    numberOfInputs: 2
    -> nvic@18


nvicInput23: Miscellaneous.CombinedInput @ none
    numberOfInputs: 5
    -> nvic@23

nvicInput40: Miscellaneous.CombinedInput @ none
    numberOfInputs: 6
    -> nvic@40

nvicInput86: Miscellaneous.CombinedInput @ none
    numberOfInputs: 2
    -> nvic@86

nvicInput137: Miscellaneous.CombinedInput @ none
    numberOfInputs: 2
    -> nvic@137

nvicInput142: Miscellaneous.CombinedInput @ none
    numberOfInputs: 2
    -> nvic@142

nvicInput149: Miscellaneous.CombinedInput @ none
    numberOfInputs: 6
    -> nvic@149

timer4: Timers.STM32_Timer @ sysbus 0x40000800
    initialLimit: 0xffff
    frequency: 3000000000
    -> nvic@30

timer2: Timers.STM32_Timer @ sysbus 0x40000000
    initialLimit: 0xffff
    frequency: 280000000
    -> nvic@28


flashController: MTD.STM32H7_FlashController @ sysbus 0x52002000
    flash1: flash0
    flash2: flash1


/*
ltdc_blank: Python.PythonPeripheral @ sysbus 0x50001024
    size: 0x4
    initable: false
    //  Bit 13 - D3CR.VOSRDY
    script: "request.value = 3"
    */


adc1: Analog.STM32G474_ADC @ sysbus 0x40022000
    referenceVoltage: 3.3
    externalEventFrequency: 1000
    -> nvic@18

adc2: Analog.STM32G474_ADC @ sysbus 0x40022100
    referenceVoltage: 3.3
    externalEventFrequency: 1000
    -> nvic@18


flash0: Memory.MappedMemory @ sysbus 0x80000000
    size: 0x10000000

flash1: Memory.MappedMemory @ sysbus 0x08000000
    size: 0x200000

ram: Memory.MappedMemory @ sysbus 0x1FF00000
    size: 0x20000

itcm: Memory.MappedMemory @ sysbus 0x00000000
    size: 0x10000

dtcm: Memory.MappedMemory @ sysbus 0x20000000
    size: 0x20000

sram0: Memory.MappedMemory @ sysbus 0x24000000
    size: 0x40000

sram1: Memory.MappedMemory @ sysbus 0x24040000
    size: 0x60000

sram2: Memory.MappedMemory @ sysbus 0x240a0000
    size: 0x60000

sram3: Memory.MappedMemory @ sysbus 0x30000000
    size: 0x10000

sram4: Memory.MappedMemory @ sysbus 0x30010000
    size: 0x10000

sram5: Memory.MappedMemory @ sysbus 0x38000000
    size: 0x8000


gpioa: GPIOPort.STM32_GPIOPort @ sysbus <0x58020000, +0x400>

gpiob: GPIOPort.STM32_GPIOPort @ sysbus <0x58020400, +0x400>

gpioc: GPIOPort.STM32_GPIOPort @ sysbus <0x58020800, +0x400>

gpiod: GPIOPort.STM32_GPIOPort @ sysbus <0x58020c00, +0x400>

gpioe: GPIOPort.STM32_GPIOPort @ sysbus <0x58021000, +0x400>

gpiof: GPIOPort.STM32_GPIOPort @ sysbus <0x58021400, +0x400>

gpiog: GPIOPort.STM32_GPIOPort @ sysbus <0x58021800, +0x400>

gpioh: GPIOPort.STM32_GPIOPort @ sysbus <0x58021c00, +0x400>

gpioi: GPIOPort.STM32_GPIOPort @ sysbus <0x58022000, +0x400>

gpioj: GPIOPort.STM32_GPIOPort @ sysbus <0x58022400, +0x400>

gpiok: GPIOPort.STM32_GPIOPort @ sysbus <0x58022800, +0x400>

pwrVosRdy: Python.PythonPeripheral @ sysbus 0x58024818
    size: 0x4
    initable: false
    //  Bit 13 - D3CR.VOSRDY
    script: "request.value = 0x2000"

pwrdpb: Python.PythonPeripheral @ sysbus 0x58024800
    size: 0x4
    initable: false
    //  Bit 13 - D3CR.VOSRDY
    script: "request.value = 1 << 8"

extmemory2: Memory.MappedMemory @ sysbus 0x70000000
    size: 0x10000000

extmemory: Memory.MappedMemory @ sysbus 0x90000000
    size: 0x10000000

hsem: Miscellaneous.STM32H7_HardwareSemaphore @ sysbus 0x58026400

watchdog: Timers.STM32_IndependentWatchdog @ sysbus 0x58004800
    frequency: 56000


//UARTS

usart1: UART.STM32F7_USART @ sysbus 0x40011000
    frequency: 921600
    IRQ->nvic@37

usart2: UART.STM32F7_USART @ sysbus 0x40004400
    frequency: 125000000
    IRQ -> exti@27

usart3: UART.STM32F7_USART @ sysbus 0x40004800
    frequency: 125000000
    IRQ -> exti@28

uart4: UART.STM32F7_USART @ sysbus 0x40004C00
    frequency: 115200
    IRQ -> exti@30

uart5: UART.STM32F7_USART @ sysbus 0x40005000
    frequency: 125000000
    IRQ -> exti@31


usart6: UART.STM32F7_USART @ sysbus 0x40011400
    frequency: 200000000
    IRQ -> exti@29

uart7: UART.STM32F7_USART @ sysbus 0x40007800
    frequency: 140000000


rng: Miscellaneous.STM32F4_RNG @ sysbus 0x48021800
    ->nvic@80

rtc: Timers.STM32F4_RTC @ sysbus 0x58004000
    AlarmIRQ->nvic@41


rcc: Miscellaneous.STM32H7B0_RCC @ sysbus 0x58024400
    rtcPeripheral :true

crc: CRC.STM32F0_CRC @ sysbus 0x40023000
    configurablePoly: true



spi3: SPI.STM32H7_SPI @ sysbus 0x40003C00
    IRQ->nvic@51
    DMARecieve -> dma2@4



fdcan1: CAN.MCAN @ sysbus 0x4000A000
    messageRAM: canMessageRAM

fdcan2: CAN.MCAN @ sysbus 0x4000A400
    messageRAM: canMessageRAM

canMessageRAM: Memory.ArrayMemory @ sysbus <0x4000AC00, +0x2800>
    size: 0x2800

crypto: Miscellaneous.Crypto.STM32H7_CRYPTO @ sysbus 0x48021000
    -> nvic@79

backupSram: Memory.MappedMemory @ sysbus 0x38800000
    size: 0x1000


/*Simu Python de l'OSPI (la flash externe mappee directe)*/
ospi: Python.PythonPeripheral @ sysbus 0x52005000
    size: 0x1000
    initable: true
    script: '''
if request.isInit:
   lastVal = 0
   data = {'tc': 1, 'tf': 1 ,'other':0}

if request.isWrite:
    if request.offset == 0x0:
        # HSION [doc = "Bit 0 - HSI16 clock enable"]
        data['other'] = (request.value >> 0) & 0x1
    elif request.offset == 0x20:
        data['tf'] = (request.value >> 3) & 0x1
        data['tc'] = (request.value >> 1) & 0x1
elif request.isRead:
    if request.offset == 0x0:
        request.value = ( 0x1 |  0x3 << 28 )
    elif request.offset == 0x20:
        request.value = ( data['tf'] << 3 | data['tc'] << 1 | 1 << 2 )
'''



/*Simu Python de l'OTFDEC*/
otfdec: Python.PythonPeripheral @ sysbus 0x5200B800
    size: 0x400
    initable: true
    script: '''

if request.isRead:
    key = 139 # crc de la cle OTFDEC
    if request.offset == 0x20: #region 1
        request.value = ( key << 8 )
    if request.offset == 0x50: #region 2
        request.value = ( key << 8 )
    if request.offset == 0x80: #region 3
        request.value = ( key << 8 )
    if request.offset == 0x110: #region 4
        request.value = ( key << 8 )
'''


/*Simu Python de l'USB*/
usb1_otg_hs: Python.PythonPeripheral @ sysbus 0x40040000
    size: 0x400
    initable: true
    script: '''

if request.isRead:
    if request.offset == 0x10:
        request.value = ( 0x1 << 31 )
'''

/*sysbus:
    init:
        ApplySVD STM32H7B0.svd*/
        /*Tag <0x40080000, 0x400BFFFF> "USB2_OTG_FS:RESET" 0x80000000*/
        /*Tag <0x40040000, 0x4007FFFF> "USB1_OTG_HS:RESET" 0x80000000*/
